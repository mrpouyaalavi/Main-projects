{"ast":null,"code":"function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nimport symbolicateStackTrace from \"../../Core/Devtools/symbolicateStackTrace\";\nvar cache = new Map();\nvar sanitize = function sanitize(_ref) {\n  var maybeStack = _ref.stack,\n    codeFrame = _ref.codeFrame;\n  if (!Array.isArray(maybeStack)) {\n    throw new Error('Expected stack to be an array.');\n  }\n  var stack = [];\n  for (var _iterator = _createForOfIteratorHelperLoose(maybeStack), _step; !(_step = _iterator()).done;) {\n    var maybeFrame = _step.value;\n    var collapse = false;\n    if ('collapse' in maybeFrame) {\n      if (typeof maybeFrame.collapse !== 'boolean') {\n        throw new Error('Expected stack frame `collapse` to be a boolean.');\n      }\n      collapse = maybeFrame.collapse;\n    }\n    stack.push({\n      column: maybeFrame.column,\n      file: maybeFrame.file,\n      lineNumber: maybeFrame.lineNumber,\n      methodName: maybeFrame.methodName,\n      collapse: collapse\n    });\n  }\n  return {\n    stack: stack,\n    codeFrame: codeFrame\n  };\n};\nexport function deleteStack(stack) {\n  cache.delete(stack);\n}\nexport function symbolicate(stack) {\n  var promise = cache.get(stack);\n  if (promise == null) {\n    promise = symbolicateStackTrace(stack).then(sanitize);\n    cache.set(stack, promise);\n  }\n  return promise;\n}","map":{"version":3,"names":["symbolicateStackTrace","cache","Map","sanitize","_ref","maybeStack","stack","codeFrame","Array","isArray","Error","_iterator","_createForOfIteratorHelperLoose","_step","done","maybeFrame","value","collapse","push","column","file","lineNumber","methodName","deleteStack","delete","symbolicate","promise","get","then","set"],"sources":["/Users/pouya/Documents/RoiFrontend-start-of-video-tutorial/node_modules/react-native/Libraries/LogBox/Data/LogBoxSymbolication.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport symbolicateStackTrace from '../../Core/Devtools/symbolicateStackTrace';\n\nimport type {StackFrame} from '../../Core/NativeExceptionsManager';\nimport type {SymbolicatedStackTrace} from '../../Core/Devtools/symbolicateStackTrace';\n\nexport type Stack = Array<StackFrame>;\n\nconst cache: Map<Stack, Promise<SymbolicatedStackTrace>> = new Map();\n\n/**\n * Sanitize because sometimes, `symbolicateStackTrace` gives us invalid values.\n */\nconst sanitize = ({\n  stack: maybeStack,\n  codeFrame,\n}: SymbolicatedStackTrace): SymbolicatedStackTrace => {\n  if (!Array.isArray(maybeStack)) {\n    throw new Error('Expected stack to be an array.');\n  }\n  const stack = [];\n  for (const maybeFrame of maybeStack) {\n    let collapse = false;\n    if ('collapse' in maybeFrame) {\n      if (typeof maybeFrame.collapse !== 'boolean') {\n        throw new Error('Expected stack frame `collapse` to be a boolean.');\n      }\n      collapse = maybeFrame.collapse;\n    }\n    stack.push({\n      column: maybeFrame.column,\n      file: maybeFrame.file,\n      lineNumber: maybeFrame.lineNumber,\n      methodName: maybeFrame.methodName,\n      collapse,\n    });\n  }\n  return {stack, codeFrame};\n};\n\nexport function deleteStack(stack: Stack): void {\n  cache.delete(stack);\n}\n\nexport function symbolicate(stack: Stack): Promise<SymbolicatedStackTrace> {\n  let promise = cache.get(stack);\n  if (promise == null) {\n    promise = symbolicateStackTrace(stack).then(sanitize);\n    cache.set(stack, promise);\n  }\n\n  return promise;\n}\n"],"mappings":";;;AAUA,OAAOA,qBAAqB;AAO5B,IAAMC,KAAkD,GAAG,IAAIC,GAAG,CAAC,CAAC;AAKpE,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAGwC;EAAA,IAF7CC,UAAU,GAAAD,IAAA,CAAjBE,KAAK;IACLC,SAAS,GAAAH,IAAA,CAATG,SAAS;EAET,IAAI,CAACC,KAAK,CAACC,OAAO,CAACJ,UAAU,CAAC,EAAE;IAC9B,MAAM,IAAIK,KAAK,CAAC,gCAAgC,CAAC;EACnD;EACA,IAAMJ,KAAK,GAAG,EAAE;EAChB,SAAAK,SAAA,GAAAC,+BAAA,CAAyBP,UAAU,GAAAQ,KAAA,IAAAA,KAAA,GAAAF,SAAA,IAAAG,IAAA,GAAE;IAAA,IAA1BC,UAAU,GAAAF,KAAA,CAAAG,KAAA;IACnB,IAAIC,QAAQ,GAAG,KAAK;IACpB,IAAI,UAAU,IAAIF,UAAU,EAAE;MAC5B,IAAI,OAAOA,UAAU,CAACE,QAAQ,KAAK,SAAS,EAAE;QAC5C,MAAM,IAAIP,KAAK,CAAC,kDAAkD,CAAC;MACrE;MACAO,QAAQ,GAAGF,UAAU,CAACE,QAAQ;IAChC;IACAX,KAAK,CAACY,IAAI,CAAC;MACTC,MAAM,EAAEJ,UAAU,CAACI,MAAM;MACzBC,IAAI,EAAEL,UAAU,CAACK,IAAI;MACrBC,UAAU,EAAEN,UAAU,CAACM,UAAU;MACjCC,UAAU,EAAEP,UAAU,CAACO,UAAU;MACjCL,QAAQ,EAARA;IACF,CAAC,CAAC;EACJ;EACA,OAAO;IAACX,KAAK,EAALA,KAAK;IAAEC,SAAS,EAATA;EAAS,CAAC;AAC3B,CAAC;AAED,OAAO,SAASgB,WAAWA,CAACjB,KAAY,EAAQ;EAC9CL,KAAK,CAACuB,MAAM,CAAClB,KAAK,CAAC;AACrB;AAEA,OAAO,SAASmB,WAAWA,CAACnB,KAAY,EAAmC;EACzE,IAAIoB,OAAO,GAAGzB,KAAK,CAAC0B,GAAG,CAACrB,KAAK,CAAC;EAC9B,IAAIoB,OAAO,IAAI,IAAI,EAAE;IACnBA,OAAO,GAAG1B,qBAAqB,CAACM,KAAK,CAAC,CAACsB,IAAI,CAACzB,QAAQ,CAAC;IACrDF,KAAK,CAAC4B,GAAG,CAACvB,KAAK,EAAEoB,OAAO,CAAC;EAC3B;EAEA,OAAOA,OAAO;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}