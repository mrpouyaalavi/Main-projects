{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport moment from 'moment';\nvar CacheItem = _createClass(function CacheItem(value) {\n  _classCallCheck(this, CacheItem);\n  this.value = value;\n  this.timeStamp = Date.now();\n});\n;\nvar AsyncCache = function () {\n  function AsyncCache() {\n    _classCallCheck(this, AsyncCache);\n    this.cachePrefix = 'cache-';\n    this.ttlMinutes = 5;\n  }\n  _createClass(AsyncCache, [{\n    key: \"isExpired\",\n    value: function isExpired(item) {\n      var now = moment(Date.now());\n      var storedTime = moment(item.timeStamp);\n      return now.diff(storedTime, 'minutes') > this.ttlMinutes;\n    }\n  }, {\n    key: \"setItem\",\n    value: function setItem(key, value) {\n      var item;\n      return _regeneratorRuntime.async(function setItem$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              item = new CacheItem(value);\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem(this.cachePrefix + key, JSON.stringify(item)));\n            case 4:\n              _context.next = 9;\n              break;\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](1);\n              console.error(_context.t0);\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[1, 6]], Promise);\n    }\n  }, {\n    key: \"getItem\",\n    value: function getItem(key) {\n      var value, item;\n      return _regeneratorRuntime.async(function getItem$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(this.cachePrefix + key));\n            case 3:\n              value = _context2.sent;\n              item = JSON.parse(value);\n              if (item) {\n                _context2.next = 7;\n                break;\n              }\n              return _context2.abrupt(\"return\", null);\n            case 7:\n              if (!this.isExpired(item)) {\n                _context2.next = 11;\n                break;\n              }\n              _context2.next = 10;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem(this.cachePrefix + key));\n            case 10:\n              return _context2.abrupt(\"return\", null);\n            case 11:\n              return _context2.abrupt(\"return\", item.value);\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(_context2.t0);\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[0, 14]], Promise);\n    }\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(key) {\n      return _regeneratorRuntime.async(function removeItem$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem(this.cachePrefix + key));\n            case 3:\n              _context3.next = 8;\n              break;\n            case 5:\n              _context3.prev = 5;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.error(_context3.t0);\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, [[0, 5]], Promise);\n    }\n  }, {\n    key: \"removeAllItems\",\n    value: function removeAllItems() {\n      var _this = this;\n      var allKeys, cacheKeys;\n      return _regeneratorRuntime.async(function removeAllItems$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getAllKeys());\n            case 3:\n              allKeys = _context4.sent;\n              cacheKeys = allKeys.filter(function (k) {\n                return k.startsWith(_this.cachePrefix);\n              });\n              if (!cacheKeys) {\n                _context4.next = 8;\n                break;\n              }\n              _context4.next = 8;\n              return _regeneratorRuntime.awrap(AsyncStorage.multiRemove(cacheKeys));\n            case 8:\n              _context4.next = 13;\n              break;\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.error(_context4.t0);\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    }\n  }]);\n  return AsyncCache;\n}();\nexport default new AsyncCache();","map":{"version":3,"names":["AsyncStorage","moment","CacheItem","_createClass","value","_classCallCheck","timeStamp","Date","now","AsyncCache","cachePrefix","ttlMinutes","key","isExpired","item","storedTime","diff","setItem","_regeneratorRuntime","async","setItem$","_context","prev","next","awrap","JSON","stringify","t0","console","error","stop","Promise","getItem","getItem$","_context2","sent","parse","abrupt","removeItem","removeItem$","_context3","removeAllItems","_this","allKeys","cacheKeys","removeAllItems$","_context4","getAllKeys","filter","k","startsWith","multiRemove"],"sources":["C:/Users/admin/Desktop/RoiFrontend-start-of-video-tutorial/utils/Caching.js"],"sourcesContent":["/** \r\n * The Caching module provides\r\n */\r\n\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport moment from 'moment';\r\n\r\n\r\n/**\r\n * @class\r\n * An item to add to the cache with a value and timestamp (for determining cache invalidation).\r\n */\r\nclass CacheItem {\r\n    /**\r\n     * \r\n     * @param {object} value The value to store in the cache.\r\n     */\r\n    constructor(value) {\r\n        /** @public The value to store in the cache. */\r\n        this.value = value;\r\n\r\n        /** @public JS timestamp when the item was created. */\r\n        this.timeStamp = Date.now();\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * @class\r\n * Handles local caching of data using AsyncStorage.\r\n */\r\nclass AsyncCache\r\n{\r\n\r\n    /** The prefix string to add to all cached items in AsyncStorage. */\r\n    cachePrefix = 'cache-';\r\n    \r\n    /** The TTL (time to live) value in minutes for all cached items. */\r\n    ttlMinutes = 5;\r\n\r\n\r\n    /**\r\n     * @private\r\n     * Check if a cache item has expired (longer than TTL) and needs to be refreshed.\r\n     * @param {CacheItem} item Cache item to check expiry for.\r\n     * @returns {bool} True if item has expired (not updated for longer than TTL).\r\n     */\r\n    isExpired(item) {\r\n        const now = moment(Date.now());\r\n        const storedTime = moment(item.timeStamp);\r\n        return now.diff(storedTime, 'minutes') > this.ttlMinutes;\r\n    }\r\n\r\n\r\n    /**\r\n     * Store an item in the cache.\r\n     * @param {string} key Key to reference cached item.\r\n     * @param {object} value The value to cache.\r\n     */\r\n    async setItem(key, value) {\r\n        const item = new CacheItem(value);\r\n        \r\n        try {\r\n            // Set item in async storage\r\n            await AsyncStorage.setItem(this.cachePrefix + key, JSON.stringify(item));\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Retrieve an item from the cache.\r\n     * @param {string} key Key to reference cached item.\r\n     */\r\n    async getItem(key) {\r\n\r\n        try {\r\n            // Get item from async storage\r\n            const value = await AsyncStorage.getItem(this.cachePrefix + key);\r\n            const item = JSON.parse(value);\r\n\r\n            // No item found, return null\r\n            if (!item) return null;\r\n            \r\n            // Item expired, return null\r\n            if (this.isExpired(item)) {\r\n                await AsyncStorage.removeItem(this.cachePrefix + key);\r\n                return null;\r\n            }\r\n\r\n            // Return item value\r\n            return item.value;\r\n\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Remove an item from the cache.\r\n     * @param {string} key Key to reference cached item.\r\n     */\r\n    async removeItem(key) {\r\n        try {\r\n            \r\n            // Remove item\r\n            await AsyncStorage.removeItem(this.cachePrefix + key);\r\n\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Removes all items from the cache.\r\n     */\r\n    async removeAllItems() {\r\n        try {\r\n\r\n            // Get all items from async storage\r\n            const allKeys = await AsyncStorage.getAllKeys();\r\n\r\n            // Filter to only include cache items\r\n            const cacheKeys = allKeys.filter(k => k.startsWith(this.cachePrefix))\r\n            \r\n            // Remove all cache items\r\n            if (cacheKeys) {\r\n                await AsyncStorage.multiRemove(cacheKeys);\r\n            }\r\n\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n}\r\n\r\nexport default new AsyncCache();"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}