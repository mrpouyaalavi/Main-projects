{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport Settings from \"../constants/Settings\";\nimport Colours from \"../constants/Colours\";\nimport { TextParagraph, TextH1, TextH2, TextH3, TextListItem } from \"../components/StyledText\";\nimport Styles from \"../styles/MainStyle\";\nimport { MyButton } from \"../components/MyButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HelpScreen(props) {\n  var _React$useState = React.useState(Settings.fontSizeModifier),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    fontSizeModifier = _React$useState2[0],\n    setfontSizeModifier = _React$useState2[1];\n  function changeFontSize(sizeModifier) {\n    Settings.fontSizeModifier += sizeModifier;\n    setfontSizeModifier(Settings.fontSizeModifier);\n  }\n  return _jsx(SafeAreaView, {\n    style: Styles.safeAreaView,\n    children: _jsx(ScrollView, {\n      style: Styles.container,\n      contentContainerStyle: Styles.contentContainer,\n      children: _jsxs(View, {\n        children: [_jsx(TextH1, {\n          style: {\n            marginTop: 0\n          },\n          children: \"Help topics\"\n        }), _jsx(TextH2, {\n          children: \"Change settings\"\n        }), _jsx(TextParagraph, {\n          children: \" Here are some basic settings to change to make the app more comfortable to use.\"\n        }), _jsx(TextH3, {\n          children: \"Font size\"\n        }), _jsxs(View, {\n          style: Styles.helpButtonContainer,\n          children: [_jsx(MyButton, {\n            text: \"- Smaller\",\n            type: \"default\",\n            size: \"medium\",\n            onPress: function onPress() {\n              changeFontSize(-0.1);\n            },\n            buttonStyle: Styles.helpButton\n          }), _jsx(MyButton, {\n            text: \"+ Bigger\",\n            type: \"default\",\n            size: \"medium\",\n            onPress: function onPress() {\n              changeFontSize(+0.1);\n            },\n            buttonStyle: Styles.homeButton\n          })]\n        }), _jsx(TextH2, {\n          children: \"Sample content\"\n        }), _jsx(TextParagraph, {\n          children: \"Here is some sample content for a help topic (or just any set of static text for the screen).\"\n        }), _jsx(TextH2, {\n          children: \"Custom components\"\n        }), _jsx(TextParagraph, {\n          children: \"You can add all of your own content and structure for these screens, making use of the customised text components from components/StyledText.\"\n        }), _jsx(TextH3, {\n          children: \"Custom text components:\"\n        }), _jsx(TextListItem, {\n          children: \"MonoText - Monospaced font (Space Mono)\"\n        }), _jsx(TextListItem, {\n          children: \"TextH1 - heading 1\"\n        }), _jsx(TextListItem, {\n          children: \"TextH2 - heading 2\"\n        }), _jsx(TextListItem, {\n          children: \"TextH3 - heading 3\"\n        }), _jsx(TextListItem, {\n          children: \"TextParagraph - paragraph\"\n        }), _jsx(TextListItem, {\n          children: \"TextListItem - bullet list item\"\n        }), _jsx(TextListItem, {\n          children: \"TextLabel - form label (inline with input)\"\n        }), _jsx(TextH2, {\n          children: \"Wanna go home?\"\n        }), _jsx(Pressable, {\n          onPress: function onPress() {\n            return props.navigation.replace('Root');\n          },\n          children: _jsx(TextParagraph, {\n            style: {\n              marginVertical: 10,\n              color: Colours.tabLabelSelected\n            },\n            children: \"Click here to go home...\"\n          })\n        })]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","View","ScrollView","Pressable","SafeAreaView","Settings","Colours","TextParagraph","TextH1","TextH2","TextH3","TextListItem","Styles","MyButton","jsx","_jsx","jsxs","_jsxs","HelpScreen","props","_React$useState","useState","fontSizeModifier","_React$useState2","_slicedToArray","setfontSizeModifier","changeFontSize","sizeModifier","style","safeAreaView","children","container","contentContainerStyle","contentContainer","marginTop","helpButtonContainer","text","type","size","onPress","buttonStyle","helpButton","homeButton","navigation","replace","marginVertical","color","tabLabelSelected"],"sources":["C:/Users/admin/Desktop/RoiFrontend-start-of-video-tutorial/screens/HelpScreen.js"],"sourcesContent":["import * as React from 'react';\nimport { View, ScrollView, Pressable } from 'react-native';\nimport { SafeAreaView } from \"react-native-safe-area-context\";\n\n// Import helper code\nimport Settings from '../constants/Settings';\nimport Colours from '../constants/Colours';\n// Import styling and components\nimport { TextParagraph, TextH1, TextH2, TextH3, TextListItem } from \"../components/StyledText\";\nimport Styles from \"../styles/MainStyle\";\nimport { MyButton } from '../components/MyButton';\n\nexport default function HelpScreen(props) {\n  // State Management\n  // Create state variable for the font size (default to the value set in the Settings.js file)\n  // const [VariableName, setVariableName]= React.useState(\"default\")\n     const [fontSizeModifier,setfontSizeModifier]= React.useState(Settings.fontSizeModifier)\n\n     //changeFontSize(-0.1)\n     function changeFontSize(sizeModifier){\n      //TODO: validate the font size (e.g. not negative)\n\n      // Update the global settings value\n        Settings.fontSizeModifier += sizeModifier\n\n      // Update the state variable To re-render the screen (update the UI)\n      setfontSizeModifier(Settings.fontSizeModifier)\n}\n\n  return (\n    <SafeAreaView style={Styles.safeAreaView}>\n      <ScrollView style={Styles.container} contentContainerStyle={Styles.contentContainer}>\n\n        <View>\n          \n          <TextH1 style={{marginTop:0}}>Help topics</TextH1>\n\n          <TextH2>Change settings</TextH2>\n          <TextParagraph> Here are some basic settings to change to make the app more comfortable to use.</TextParagraph>\n          <TextH3>Font size</TextH3>\n\n          <View style={Styles.helpButtonContainer}>\n          <MyButton\n            text=\"- Smaller\"\n            type=\"default\"      // default*|major|minor\n            size=\"medium\"      // small|medium*|large\n            onPress={()=> {changeFontSize(-0.1)}}\n            buttonStyle={Styles.helpButton}\n          />\n          <MyButton\n            text=\"+ Bigger\"\n            type=\"default\"      // default*|major|minor\n            size=\"medium\"      // small|medium*|large\n            onPress={()=> {changeFontSize(+0.1)}}\n            buttonStyle={Styles.homeButton}\n          />\n        </View>\n\n          <TextH2>Sample content</TextH2>\n\n          <TextParagraph>Here is some sample content for a help topic (or just any set of static text for the screen).</TextParagraph>\n\n          <TextH2>Custom components</TextH2>\n\n          <TextParagraph>You can add all of your own content and structure for these screens, making use of the customised text components from components/StyledText.</TextParagraph>\n\n          <TextH3>Custom text components:</TextH3>\n\n          <TextListItem>MonoText - Monospaced font (Space Mono)</TextListItem>\n          <TextListItem>TextH1 - heading 1</TextListItem>\n          <TextListItem>TextH2 - heading 2</TextListItem>\n          <TextListItem>TextH3 - heading 3</TextListItem>\n          <TextListItem>TextParagraph - paragraph</TextListItem>\n          <TextListItem>TextListItem - bullet list item</TextListItem>\n          <TextListItem>TextLabel - form label (inline with input)</TextListItem>\n\n          <TextH2>Wanna go home?</TextH2>\n\n          <Pressable onPress={() => props.navigation.replace('Root')}>\n            <TextParagraph style={{marginVertical: 10, color: Colours.tabLabelSelected}}>Click here to go home...</TextParagraph>\n          </Pressable>\n\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}