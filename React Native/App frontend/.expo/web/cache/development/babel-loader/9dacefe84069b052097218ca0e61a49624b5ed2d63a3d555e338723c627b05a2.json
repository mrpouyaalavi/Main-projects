{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Platform } from 'expo-modules-core';\nimport invariant from 'invariant';\nvar EventTypes = ['url'];\nvar listeners = [];\nexport default {\n  addEventListener: function addEventListener(type, listener) {\n    invariant(EventTypes.indexOf(type) !== -1, \"Linking.addEventListener(): \" + type + \" is not a valid event\");\n    var nativeListener = function nativeListener(nativeEvent) {\n      return listener({\n        url: window.location.href,\n        nativeEvent: nativeEvent\n      });\n    };\n    listeners.push({\n      listener: listener,\n      nativeListener: nativeListener\n    });\n    window.addEventListener('message', nativeListener, false);\n  },\n  removeEventListener: function removeEventListener(type, listener) {\n    invariant(EventTypes.indexOf(type) !== -1, \"Linking.removeEventListener(): \" + type + \" is not a valid event.\");\n    var listenerIndex = listeners.findIndex(function (pair) {\n      return pair.listener === listener;\n    });\n    invariant(listenerIndex !== -1, 'Linking.removeEventListener(): cannot remove an unregistered event listener.');\n    var nativeListener = listeners[listenerIndex].nativeListener;\n    window.removeEventListener('message', nativeListener, false);\n    listeners.splice(listenerIndex, 1);\n  },\n  canOpenURL: function canOpenURL(url) {\n    return function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", true);\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  getInitialURL: function getInitialURL() {\n    return function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (Platform.isDOMAvailable) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\", '');\n            case 2:\n              return _context2.abrupt(\"return\", window.location.href);\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  openURL: function openURL(url) {\n    return function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (Platform.isDOMAvailable) {\n                window.location = new URL(url, window.location).toString();\n              }\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  }\n};","map":{"version":3,"names":["Platform","invariant","EventTypes","listeners","addEventListener","type","listener","indexOf","nativeListener","nativeEvent","url","window","location","href","push","removeEventListener","listenerIndex","findIndex","pair","splice","canOpenURL","_callee","_regeneratorRuntime","async","_callee$","_context","prev","next","abrupt","stop","Promise","getInitialURL","_callee2","_callee2$","_context2","isDOMAvailable","openURL","_callee3","_callee3$","_context3","URL","toString"],"sources":["C:\\Users\\admin\\Desktop\\RoiFrontend-start-of-video-tutorial\\node_modules\\expo-linking\\src\\ExpoLinking.web.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\nimport invariant from 'invariant';\n\nimport { NativeURLListener, URLListener } from './Linking.types';\n\nconst EventTypes = ['url'];\n\nconst listeners: { listener: URLListener; nativeListener: NativeURLListener }[] = [];\n\nexport default {\n  addEventListener(type: 'url', listener: URLListener): void {\n    invariant(\n      EventTypes.indexOf(type) !== -1,\n      `Linking.addEventListener(): ${type} is not a valid event`\n    );\n    const nativeListener: NativeURLListener = (nativeEvent) =>\n      listener({ url: window.location.href, nativeEvent });\n    listeners.push({ listener, nativeListener });\n    window.addEventListener('message', nativeListener, false);\n  },\n\n  removeEventListener(type: 'url', listener: URLListener): void {\n    invariant(\n      EventTypes.indexOf(type) !== -1,\n      `Linking.removeEventListener(): ${type} is not a valid event.`\n    );\n    const listenerIndex = listeners.findIndex((pair) => pair.listener === listener);\n    invariant(\n      listenerIndex !== -1,\n      'Linking.removeEventListener(): cannot remove an unregistered event listener.'\n    );\n    const nativeListener = listeners[listenerIndex].nativeListener;\n    window.removeEventListener('message', nativeListener, false);\n    listeners.splice(listenerIndex, 1);\n  },\n\n  async canOpenURL(url: string): Promise<boolean> {\n    // In reality this should be able to return false for links like `chrome://` on chrome.\n    return true;\n  },\n\n  async getInitialURL(): Promise<string> {\n    if (!Platform.isDOMAvailable) return '';\n    return window.location.href;\n  },\n\n  async openURL(url: string): Promise<void> {\n    if (Platform.isDOMAvailable) {\n      // @ts-ignore\n      window.location = new URL(url, window.location).toString();\n    }\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}